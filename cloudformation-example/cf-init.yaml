---
AWSTemplateFormatVersion: "2010-09-09"

Description:
  This separate stack is to keep it there and avoid wrong deletion

Parameters:
  Prefix:
    Type: String
    Description: this is a prefix for all the resources you cannot use number, it is checked only when we submit the template.
    AllowedPattern: ^[a-zA-Z]*$


  SubnetForEc2:
    Type: AWS::EC2::Subnet::Id
    Description: a subnet taken from the list in the region

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: choose the VPC where there is also the subnet

  WebServerPort: 
    Default: 80
    Description: TCP/IP port for the web server
    Type: Number
    MinValue: 1
    MaxValue: 1023

Resources:
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: created with cloudformation
      GroupName: !Sub '${Prefix}-mySG'
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: !Ref WebServerPort
        ToPort: !Ref WebServerPort
        CidrIp: 0.0.0.0/0

  Instance:
    Type: AWS::EC2::Instance
    # create a signal for cfn-signal
    CreationPolicy: 
      ResourceSignal:
        Timeout: PT15M
    # defines how to set up the instance
    Metadata:
      "AWS::CloudFormation::Init":
        configSets:
          setup:
            - install_server
        install_server:
          packages:
            yum:
              httpd: []
          files:
            "/var/www/html/index.html":
              content: |
                Hello world!
              mode: 644
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    Properties:
      ImageId: 'ami-0f89681a05a3a9de7'  # image from Ireland , remember you can run only t2.micro there
      InstanceType: 't2.micro'
      SubnetId: !Ref SubnetForEc2
      SecurityGroupIds:
        - !Ref MySecurityGroup
      Tags:
        -
          Key: Name
          Value: 'cf-init-test' 
      UserData:
        # runs the cfn-init scripts
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum update -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource Instance --configsets setup --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource Instance --region ${AWS::Region}